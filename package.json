{
  "name": "jscrs",
  "version": "0.2.4",
  "description": "comment-rate-statistics",
  "author": "phillyx",
  "email": "1020450921@qq.com",
  "main": "build/index.js",
  "bin": {
    "jscrs": "./bin/jscrs"
  },
  "typings": "build/index.d.ts",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/phillyx/jscrs.git"
  },
  "homepage": "https://github.com/phillyx/jscrs/",
  "bugs": {
    "url": "https://github.com/phillyx/jscrs/issues"
  },
  "scripts": {
    "build": "run-s clean && run-p build:*",
    "build:main": "tsc -p tsconfig.json",
    "test": "jest",
    "watch": "run-s clean build:main && run-p \"build:main -- -w\" \"test:unit -- --watch\"",
    "clean": "trash build",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "version": "standard-version"
  },
  "engines": {
    "node": ">=10.0"
  },
  "scripts-info": {
    "build": "Clean and rebuild the project",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "version": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit"
  },
  "keywords": [
    "comment",
    "code-quality",
    "code-smells",
    "duplication",
    "analyze",
    "quality",
    "javascript",
    "typescript",
    "sass",
    "css",
    "vue",
    "html",
    "vue",
    "tsx",
    "jsx"
  ],
  "readmeFilename": "README.md",
  "devDependencies": {
    "@types/fs-extra": "^8.0.1",
    "@types/jest": "^24.0.23",
    "@types/node": "^12.12.17",
    "jest": "^24.9.0",
    "npm-run-all": "^4.1.5",
    "trash-cli": "^3.0.0",
    "ts-jest": "^24.1.0",
    "ts-node": "^8.5.3",
    "ts-node-dev": "^1.0.0-pre.44",
    "typescript": "^3.7.2"
  },
  "dependencies": {
    "colors": "^1.4.0",
    "commander": "^4.0.1",
    "detect-installed": "^2.0.4",
    "fast-glob": "^3.1.1",
    "fs-extra": "^8.1.0",
    "gitignore-to-glob": "^0.3.0"
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/test/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  }
}